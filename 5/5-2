pragma solidity ^0.4.8;

//5-2
//문자열 저장 계약
contract KeyValueStore {
    // 키 상태 변수 정의
    uint256 keyIndex;
    // 값 상태 변수 정의
    struct values {
        string value1;
        string value2;
    }
    
    // (1) 키와 값의 Mapping 정의
    mapping (uint256 => values) Obj;
    // (2) 키에 대한 값 12를 등록하는 함수
    function setValue(string _value1, string _value2) constant returns (uint256) {
        Obj[keyIndex].value1 = _value1;
        Obj[keyIndex].value2 = _value2;
        keyIndex++;
        return keyIndex;
    }
    
    // (3) 키에 대한 값 1을 가져오는 함수
    function getValue1(uint _key) constant returns (string) {
        return Obj[_key].value1;
    }
    
    // (4) 키에 대한 값 2를 가져오는 함수
    function getValue2(uint _key) constant returns (string) {
        return Obj[_key].value2;
    }
}





주석제거

$ solc -o ./ --bin --optimize KeyValueStore.sol
$ cat KeyValueStore.bin

$ solc --abi KeyValueStore.sol

4) geth 접속
$ geth --networkid 4649 --nodiscover --maxpeers 0 --datadir /Users/jihwan/data_testnet console 2>> /Users/jihwan/data_testnet/geth.log

5) 계약 등록자의 계정 잠금을 해제한다.
> personal.unlockAccount(eth.accounts[0], "pass0", 0)

6) 계약을 블록체인에 등록한다.
> KeyvaluestoreContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"_key","type":"uint256"}],"name":"getValue1","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"uint256"}],"name":"getValue2","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_value1","type":"string"},{"name":"_value2","type":"string"}],"name":"setValue","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}])

> keyvaluestore = KeyvaluestoreContract.new({from: eth.accounts[0], data:'0x6060604052341561000f57600080fd5b6104198061001e6000396000f3006060604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663159c8256811461005b578063491460cf146100e8578063ec86cfad146100fe575b600080fd5b341561006657600080fd5b6100716004356101a3565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100ad578082015183820152602001610095565b50505050905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156100f357600080fd5b610071600435610261565b341561010957600080fd5b61019160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506102e895505050505050565b60405190815260200160405180910390f35b6101ab610340565b600160008381526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b50505050509050919050565b610269610340565b600160008381526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102555780601f1061022a57610100808354040283529160200191610255565b600080548152600160205260408120838051610308929160200190610352565b506000805481526001602081905260409091200182805161032d929160200190610352565b5050600080546001019081905592915050565b60206040519081016040526000815290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061039357805160ff19168380011785556103c0565b828001600101855582156103c0579182015b828111156103c05782518255916020019190600101906103a5565b506103cc9291506103d0565b5090565b',gas:3000000})


함수들이 생겨야 블록에 쌓인 것
allEvents : function(),
getValue1 : function(),
getValue2 : function(),
setValue : function()


9) 계약에 접근하기 위한 변수를 정의한다.
> contractObj = eth.contract(keyvaluestore.abi).at(keyvaluestore.address)

10) 블록체인의 KeyValueStore 계약에 값1과 2






